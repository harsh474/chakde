//7 SEGMENT LED 0-9
#include<REGX51.h>
void delay(int num)
{
	int a;
	for(a=0;a<=num;a++);
}
void main(){
	int i;
	char a[10]={0x3F,0x06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X67};
	while(1){
		for(i=0;i<10;i++){
		P2=a[i];
		delay(3000);
		}
	}
}

==================================================================================
//7 SEGMENT LED 0000-9999
#include<REGX51.h>
void delay(int num)
{
	int a;
	for(a=0;a<=num;a++);
}
void main(){
int i,j,k,l,m ;
unsigned char arr[] = {0x3F,0x06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X67} ;
	while(1)
	{
		for(i=0;i<=9;i++){
		 for(j=0;j<=9;j++){	
			for(k=0;k<=9;k++){
			 for(l=0;l<=9;l++){
				for(m=0;m<=50;m++){
								P2 = 0x08 ;
								P0 = arr[i];
								delay(200);
								P2 = 0x04 ;
								P0 = arr[j];
								delay(200);
								P2 = 0x02 ;
								P0 = arr[k];
								delay(200);
								P2 = 0x01 ;
								P0 = arr[l];
								delay(200);
							}
						}
					}
				}
			}
	}
}


==============================================================================================
//INTERFACING 16*2 LCD
#include<REGX51.h>
#define DATA P0
sbit RS = P1^0;
sbit EN = P1^1;
void delay(int num)
{
	int a;
	for(a=0;a<=num;a++);
}
void cmd_lcd (unsigned char dat) // function to write command at lcd port
{
	DATA=dat;
	RS=0; //clear RS (ie. RS=0) to write command
	EN=1; // send H-L pulse at E pin
	delay(100);
	EN=0;
	delay(100);
}
void data_lcd (unsigned char dat) // function to write data at lcd port
{
DATA=dat;
RS=1; // set RS=1 to write DATA
EN=1; // send H-L pulse at E pin
delay(100);
EN=0;
delay(100);
}
void init_lcd() // function to initialize the LCD at power on time
{
	cmd_lcd(0x38); // 2x16 display select
	delay(50000);
	cmd_lcd(0x0c); // display on cursor off command
	delay(1000);
	cmd_lcd(0x06); // automatic cursor movement to right
	delay(1000);
	cmd_lcd(0x01); // lcd clear command
	delay(5000);
}
void string_lcd(unsigned char *str) // function to display string to lcd
{
	while(*str!='\0') // '\0' is null char as last char of pointer is null
	{
	data_lcd(*str);
	str++;
	}
}
void main()
{
	int i ;
	init_lcd();
	while(1)
	{
		cmd_lcd(0x80);
		string_lcd("rishi ");
		delay(1000);
		string_lcd("tushar ");
		for(i=0;i<5;i++)
		{
		delay(1000);
		cmd_lcd(0x1C);
		delay(1000);
		}
		for(i=0;i<5;i++)
		{
		delay(1000);
		cmd_lcd(0x18);
		delay(1000);
		}
	}
}

======================================

&&hexkeypad

#include <reg51.h>
sbit RS = P3^3;
sbit E = P3^2;

sbit R0 = P0^3;
sbit R1 = P0^2;
sbit R2 = P0^1;
sbit R3 = P0^0;
sbit C0 = P0^6;
sbit C1 = P0^5;
sbit C2 = P0^4;

#define DATA P1

void delay(int num)
{
int a;
for(a=0;a<=num;a++);
}
void cmd_lcd (unsigned char dat)    // function to write command at lcd port 
{
	DATA=dat;
	RS=0;			  //clear RS (ie. RS=0) to write command
	E=1;			  // send  H-L pulse	at E pin		
	delay(100);
	E=0;
	delay(100);
}

void data_lcd (unsigned char dat)	// function to write data at lcd port 
{
	DATA=dat;
	RS=1;				// set RS=1 to write DATA
	E=1;			  // send  H-L pulse	at E pin		
	delay(100);
	E=0;
	delay(100);					  
}

void init_lcd()		        	 // function to initialize the LCD at power on time
{
	cmd_lcd(0x38);			 // 2x16 display select
	delay(50000);
	cmd_lcd(0x0c);			 // display on cursor off command
	delay(1000);
	cmd_lcd(0x06);			 // automatic cursor movement to right
	delay(1000);
	cmd_lcd(0x01);			 // lcd clear command 
	delay(5000);
}

void string_lcd(unsigned char *str)	   // function to display string to lcd
{
	 while(*str!='\0')		  		// '\0' is null char as last char of pointer is null
	 {
		 data_lcd(*str);
		 str++;
	 }
 }

void number_lcd(unsigned int dat, unsigned int siz)      // function to display any digit decimal value to lcd
{
unsigned int temp,temparr[10];

for(temp=siz;temp>0;temp--)
        {
                temparr[temp-1]=dat%10;
                dat=dat/10;
        }
for(temp=0;temp<siz;temp++)
        {
                data_lcd(temparr[temp]+0x30);
        }        
}
void main(){
	init_lcd();

	while(1){
		R0 = R1 = R2 = R3 = 1;
		R0 = 0;
		if(C0 == 0){
			string_lcd("1");
			init_lcd();
		}

		R0 = 0;
		if(C1 == 0){
			string_lcd("2");
			init_lcd();
		}

		R0 = 0;
		if(C2 == 0){
			string_lcd("3");
			init_lcd();
		}

		
		R0 = R1 = R2 = R3 = 1;
		R1 = 0;
		if(C0 == 0){
			string_lcd("4");
			init_lcd();
		}
		R1 = 0;
		if(C1 == 0){
			string_lcd("5");
			init_lcd();
		}
		R1 = 0;
		if(C2 == 0){
			string_lcd("6");
			init_lcd();
		}
		

		R0 = R1 = R2 = R3 = 1;
		R2 = 0;
		if(C0 == 0){string_lcd("7");init_lcd();}
		R2 = 0;
		if(C1 == 0){string_lcd("8");init_lcd();}
		R2 = 0;
		if(C2 == 0){string_lcd("9");init_lcd();}
		
		R0 = R1 = R2 = R3 = 1;
		R3 = 0;
		if(C0 == 0){string_lcd("*");init_lcd();}
		R3 = 0;
		if(C1 == 0){string_lcd("0");init_lcd();}
		R3 = 0;
		if(C2 == 0){string_lcd("#");init_lcd();}
	}
}

===========================================

&&ADC


#include<reg51.h>
#define DATA P0
#define ADC P3
sbit RS=P2^0;
sbit E=P2^1;
sbit ALE=P1^2;
sbit SOC=P1^1;
sbit OE=P1^0;
sbit EOC=P1^3;
sbit SET0=P1^5;
sbit SET1=P1^6;
sbit SET2=P1^7;
sbit CLOCK=P1^4;
unsigned char adc_val;
void delay(int num)
{
	int a;
	for(a=0;a<=num;a++);
}
void clock(void)
{
 int a,b;
 for(b=0;b<=1000;b++)
 {

 for(a=0;a<30;a++);
 CLOCK=~CLOCK;
 }
}
unsigned char adc(char s)
{
 unsigned char dat;
 if(s & (1<<0)) SET0=1;
 if(s & (1<<1)) SET1=1;
 if(s & (1<<2)) SET2=1;

 ALE=1; SOC=1; clock();
 ALE=0; SOC=0; clock();
 while(EOC==0);
 OE = 1;
 dat = ADC;
 return(dat);
}
void cmd_lcd (unsigned char dat) // function to write command at lcd port
{
 DATA=dat;
 RS=0; //clear RS (i.e. RS=0) to write command
 E=1; // send H-L pulse at E pin
 delay(100);
 E=0;
 delay(100);
}
void data_lcd (unsigned char dat) // function to write data at lcd port
{
 DATA=dat;
 RS=1; // set RS=1 to write DATA
E=1; // send H-L pulse at E pin
 delay(100);
 E=0;
 delay(100);
}
void init_lcd() // function to initialize the LCD at power on time
{
 cmd_lcd(0x38); // 2x16 display select
 delay(50000);
 cmd_lcd(0x0c); // display on cursor off command
 delay(1000);
 cmd_lcd(0x06); // automatic cursor movement to right


 delay(1000);
 cmd_lcd(0x01); // lcd clear command
 delay(5000);
}
void string_lcd(unsigned char *str) // function to display string to lcd
{
	 while(*str!='\0') // '\0' is null char as last char of pointer is null
	 {
			data_lcd(*str);
		  str++;
	 }
}
void number_lcd(unsigned int dat, unsigned int siz)
{
	unsigned int temp,temparr[10];
	for(temp=siz;temp>0;temp--)
	{
		 temparr[temp-1]=dat%10;
		 dat=dat/10;
	}
	for(temp=0;temp<siz;temp++)
	{
	  data_lcd(temparr[temp]+0x30);
	}
}
void main(void)
{
 init_lcd();
 string_lcd("ADC Test");
 delay(30000);
 while(1)
 {
	 adc_val = adc(7);
	 cmd_lcd(0xc0);
	 number_lcd(adc_val,3);
	 delay(1000);
 }
} 


=================================================

&&DAC

#include <reg51.h>
void main(){
	while(1){
		int numbers[32] = {0x80,0x98,0xb0,0xc6,0xda,0xea,0xf5,0xfd,
			0xff,0xfd,0xf5,0xea,0xda,0xc6,0xb0,0x98,0x80,0x67,0x4f,0x39,
			0x25,0x15,0xa,0x2,0x0,0x2,0xa,0x15,0x25,0x39,0x4f,0x67};
		int i;															      
		for(i=0;i<32;i++){
			P0 = numbers[i];
		}
	}
}

======================================================

&&SERIAL COMMUNICATION

#include<reg51.h>
void delay(int num)
{
	int a;
	for(a=0;a<=num;a++);
}
void init_serial(unsigned int br)
{
	TMOD=0x20;
	SCON=0x50;
	TH1=(256-(28800/br));
	TR1=1;
}
unsigned char rec_serial()
{
	RI=0;
	while(RI==0);
	RI=0;
	return(SBUF);
}
void trans_serial(unsigned char trans)
{
	SBUF=trans;
	while(TI==0);
	TI=0;
}
void string_serial(unsigned char *str) // function to display string to lcd
{
	while(*str!='\0') // '\0' is null char as last char of pointer is null
	{
	trans_serial(*str);
	str++;
	}
}
void main()
{
	init_serial(9600);
	delay(10000);
	string_serial("Serial Communication Test With 8051.\n\r");
	while(1)
	{
		trans_serial(rec_serial());
	}
}

========================================================

&&ARITHMETIC OPERATION

#include <reg51.h>
void delay(int num)
{
 int a;
 for (a = 0; a <= num; a++);
}
void init_serial(unsigned int br)
{
	TMOD=0x20;
	SCON=0x50;
	TH1=(256-(28800/br));
	TR1=1;
}
unsigned char rec_serial()
{
	RI=0;
	while(RI==0);
	RI=0;
	return(SBUF);
}
void trans_serial(unsigned char trans)
{
	SBUF=trans;
	while(TI==0);
	TI=0;
}
void string_serial(unsigned char *str) // function to display string to lcd
{
	while(*str!='\0') // '\0' is null char as last char of pointer is null
	{
	trans_serial(*str);
	str++;
	}
}
void main()
{
	init_serial(9600);
	delay(10000);
	while(1)
	{
		unsigned int i,output;
		unsigned char input,out[20];
		input=rec_serial();
		output=input-'0'+8;
		for(i=19;i>=0;i--)
		{
			out[i]=output%10+'0';
			output=output/10;
		}
		string_serial("After adding & number becomes: \t");
		while(out[i]==0)
		{
			i++;
		}
		for(;i<20;i++)
		{
				trans_serial('\n');
		}
	}
}


===================================================================

&&STEPPER MOTOR

#include <reg51.h>
sbit m1 = P0 ^ 0;
sbit m2 = P0 ^ 3;
sbit m3 = P0 ^ 1;
sbit m4 = P0 ^ 2;
void delay(int num)
{
 int a;
 for (a = 0; a <= num; a++);
}
void main()
{
 char i;
 while (1)
 {
	 for (i = 0; i < 12; i++)
	 {
		 m1 = 1;
		 m2 = m3 = m4 = 0;
		 delay(30000);
		 m2 = 1;
		 m1 = m3 = m4 = 0;

		 delay(30000);
		 m3 = 1;
		 m1 = m2 = m4 = 0;
		 delay(30000);
		 m4 = 1;
		 m1 = m2 = m3 = 0;
		 delay(30000);
	 }
	 for (i = 0; i < 12; i++)
	 {
		 m4 = 1;
		 m1 = m2 = m3 = 0;
		 delay(30000);
		 m3 = 1;
		 m1 = m2 = m4 = 0;
		 delay(30000);
		 m2 = 1;
		 m1 = m3 = m4 = 0;
		 delay(30000);
		 m1 = 1;
		 m2 = m3 = m4 = 0;
		 delay(30000);
	 }
  }
}

====================
